---
resource_types:
  - name: google-cloud-storage
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
- name: gcs-bucket
  type: google-cloud-storage
  source:
    bucket: YOUR-GCS-BUCKET-NAME
    regexp: YOUR-DIRECTORY-AND-FILE-NAME-REGEXP
            # e.g. releases/myapp-release-(.*).tar.gz"
    json_key: |
      # YOUR-JSON-PRIVATE-KEY-OBJECT-GOES-HERE
      {
        "type": ...,
        "project_id": ...,
        "private_key_id": ...,
        "private_key": ...,
        "client_email": ...,
        "client_id": ...,
        ...
      }
      # To create one for your GCS account, see:
      # https://cloud.google.com/storage/docs/authentication#generating-a-private-key

jobs:
- name: 1-build-and-save-release-to-gcs
  plan:
  - task: create-artifact
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ubuntu
      outputs:
      - name: build
      run:
        path: sh
        args:
        - -exc
        - |
          # Do your build steps here. Creating temporary file below as a sample:
          export CURRENT_TIMESTAMP=$(date +"%Y%m%d%H%S")
          echo "Sample build output file, timestamp: $CURRENT_TIMESTAMP" > ./build/myappfile.txt
          # Creating sample package file with a file name containing the new version number
          tar -cvzf ./myapp-release-$CURRENT_TIMESTAMP.tar.gz  --directory=./build .
          mv ./myapp-release-*.tar.gz ./build
          find .
  - put: gcs-bucket
    params: { file: ./build/myapp-release-*.tar.gz }

- name: 2-trigger-when-new-file-is-added-to-gcs
  plan:
  - get: gcs-bucket
    trigger: true
    passed:
      - 1-build-and-save-release-to-gcs
  - task: use-new-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ubuntu
      inputs:
      - name: gcs-bucket
      run:
        path: sh
        args:
        - -exc
        - |
          cd ./gcs-bucket
          ls -la
          echo "Version of release file retrieved: $(cat ./version). Extracting release file..."
          tar -xvf ./myapp-release-*.tar.gz
          ls -la
          cat ./myappfile.txt
